services:
#  postgres:
#    container_name: postgres
#    image: postgres
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#      PGDATA: /data/postgres
#    volumes:
#      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped
#  zipkin:
#    image: openzipkin/zipkin
#    container_name: zipkin
#    ports:
#      - "9411:9411"
#    networks:
#      - spring
#  rabbitmq:
#    image: rabbitmq:3.9.11-management-alpine
#    container_name: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    networks:
#      - spring
#
#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    ports:
#      - '2181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    networks:
#      - spring

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181





#  eureka-server:
#    image: yigitcanyontem/eureka-server:latest
#    container_name: eureka-server
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#  apigw:
#    image: yigitcanyontem/apigw:latest
#    container_name: apigw
#    ports:
#      - "8083:8083"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#      - eureka-server
#  customer:
#    image: yigitcanyontem/customer:latest
#    container_name: customer
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - zipkin
#      - postgres
#      - rabbitmq
#  fraud:
#    image: yigitcanyontem/fraud:latest
#    container_name: fraud
#    ports:
#      - "8081:8081"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - zipkin
#      - postgres
#      - rabbitmq
#  notification:
#    image: yigitcanyontem/notification:latest
#    container_name: notification
#    ports:
#      - "8082:8082"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - zipkin
#      - postgres
#      - rabbitmq
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
